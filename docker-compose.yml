version: '3'

services:
  # Define the api service
  backend:
    build: 
      context: ./backend
    ports:
      - "8081:8081"
    # Command to start the Flask server when the container starts
    #command: ["flask", "run", "--host=0.0.0.0", "--port=8081"]
    environment:
      - DB_URL=postgresql://postgres:postgres@db:5432/postgres
    depends_on:
      - db
      
  # Define the web service
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
      
  db:
    build:
      context: ./db
    # ports:
    #   - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata: {}
    

# services:
#   api:
#     # path to build context (Dockerfile to create Docker image)
#     build: 
#       context: ./backend    

#     # map port on local machine to port on Docker image
#     ports:
#       - "8081:8081"
    
#     # save changes made to the app to your image (data will persist the next time the container is run)
#     # ./backend is where to save persistent data, /backend is the directory we're grabbing the changes from
#     # volumes:
#     #   - ./backend:/backend

#     # # Handles the command used to run the project in the Docker container
#     # command: bash -c "python manage.py runserver 0.0.0.0:8000"

#   web:
#     build: 
#       context: ./frontend
#     ports:
#       - "3000:80"

#     # mount code in a volume so that we can sync our changes with the container while developing
#     volumes:
#       - ./frontend/src:/frontend/src